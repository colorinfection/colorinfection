<?xml version="1.0"?>
<project name="FlexPhysics" basedir="." default="release">
   
   <property file="${basedir}/LocalSettings.properties" />
   <property name="dir.flexsdk"        value="${Path.Flex.Sdk}" />
    
   
   <property name="dir.src"        value="${basedir}/src" />
   <property name="dir.res"        value="${basedir}/res" />
   <property name="dir.libs"        value="${basedir}/libs" />
   <property name="dir.tools"        value="${basedir}/tools" />
   <property name="dir.build"      value="${basedir}/.build" /> 
   <property name="dir.build.res"      value="${dir.build}/res" /> 
   <property name="dir.build.res-compiled"      value="${dir.build}/res-compiled" />
   <property name="dir.build.src"      value="${dir.build}/src" /> 
   <property name="dir.release"        value="${basedir}/.release" />
   
   <property name="editor-main-class-name" value="com.meme.app.Suit2d" />
   
   <path id="class-path">
      <fileset dir="${dir.libs}" includes="**/*.jar" />
   </path>
   
   <pathconvert property="string.class-path" refid="class-path"/>
   
   
   <target name="run-editor">
      <java fork="true" classname="${editor-main-class-name}">
         <classpath>
            <path refid="class-path" />
         </classpath>
      </java>
   </target>
   
   <target name="clean">
      <delete dir="${dir.build}" quiet="true" />
      <delete dir="${dir.release}" quiet="true" />
   </target>
   
   <target name="--compile-resource" depends="clean">
      <mkdir dir="${dir.build.res}" />
      <copy todir="${dir.build.res}" overwrite="true">
         <fileset dir="${dir.res}" />
      </copy>
      <mkdir dir="${dir.build.res-compiled}" />
      <exec dir="${dir.build.res-compiled}" executable="jrunscript.exe">
         <arg line="-cp ${string.class-path}"/>
         <arg line="-f ${dir.tools}/package.js"/>
         <arg line="res_base_dir=${dir.build.res}"/>
         <arg line="res_compiled_dir=${dir.build.res-compiled}"/>
         <arg line="game_mode=${--game-mode}"/>
      </exec>
      <copy todir="${dir.build.src}/game/res" overwrite="true">
         <fileset dir="${dir.build.res-compiled}" />
      </copy>
   </target>
   
   <target name="--compile">
      <mkdir dir="${dir.release}" />
      <mkdir dir="${dir.build.src}" />
      <copy todir="${dir.build.src}" overwrite="true">
         <fileset dir="${dir.src}">
            <exclude name="**/.svn/**"/>
         </fileset>
      </copy>
      <condition property="special-game-mode">
         <length string="${--game-mode}" when="greater" length="0" />
      </condition>
      <condition property="is-debugging" value="true" else="false">
         <istrue value="${--debug}"/>
      </condition>
      
      <exec dir="${dir.build.src}" executable="mxmlc.exe">
         <arg line="-debug=${--debug}"/>
         <arg line="-define+=Compiler::debugging,${is-debugging}" />
         <arg line="-define+=App::Default_Width,${--width}" />
         <arg line="-define+=App::Default_Height,${--height}" />
         <arg line="-output=${dir.release}/ColorInfection2.swf"/>
         <arg line="-default-background-color 0xFFFFFF"/>
         <arg line="-default-frame-rate 30"/>
         <arg line="-use-network" />
         <arg line="-default-size ${--width} ${--height}" />
         <arg line="-source-path=${dir.build.src}" />
         <arg line="-locale=en_US" />
         <arg line="-include-libraries ${dir.build.src}/kongregate/KongregateAPI.swc" />
         <arg line="-include-libraries ${dir.build.src}/mindjolt/MindJoltAPI.swc" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/libs" />
         
         <!-- method 1 -->
         <!--arg line="${dir.build.src}/game.mxml" /-->
         
         <!-- method 2 -->
         <!--
         <arg line="game/GameCanvas.as" />
         -->
         
         <!-- method 3 -->
         <arg line="-frame=game_canvas,game.GameCanvas" />
         <arg line=" game/Preloader.as" />

      </exec>
   </target>
   
   
<!-- pDecathlon -->

   <target name="compile-resource-decathlon" depends="clean">
      <antcall target="--compile-resource">
         <param name="--game-mode" value="decathlon" />
      </antcall>
   </target>
   
   <target name="debug-decathlon">
      <antcall target="--compile">
         <param name="--debug" value="true" />
         <param name="--game-mode" value="decathlon" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release-decathlon" depends="compile-resource-decathlon">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="decathlon" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release2-decathlon">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="decathlon" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   
<!-- pPuzzle -->

   <target name="compile-resource-puzzle" depends="clean">
      <antcall target="--compile-resource">
         <param name="--game-mode" value="puzzle" />
      </antcall>
   </target>
   
   <target name="debug-puzzle">
      <antcall target="--compile">
         <param name="--debug" value="true" />
         <param name="--game-mode" value="puzzle" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release-puzzle" depends="compile-resource-puzzle">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="puzzle" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release2-puzzle">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="puzzle" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   
   
<!-- pDomino -->

   <target name="compile-resource-domino" depends="clean">
      <antcall target="--compile-resource">
         <param name="--game-mode" value="domino" />
      </antcall>
   </target>
   
   <target name="debug-domino">
      <antcall target="--compile">
         <param name="--debug" value="true" />
         <param name="--game-mode" value="domino" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release-domino" depends="compile-resource-domino">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="domino" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
   <target name="release2-domino">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="domino" />
         <param name="--width" value="600" />
         <param name="--height" value="630" />
      </antcall>
   </target>
   
<!-- default -->

   <target name="compile-resource" depends="clean">
      <antcall target="compile-resource-puzzle" />
   </target>
   
   <target name="debug">
      <antcall target="debug-puzzle" />
   </target>
   
   <target name="release">
      <antcall target="release-puzzle" />
   </target>
   
   <target name="release2">
      <antcall target="release2-puzzle" />
   </target>
   
</project>